<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Insertion Sort Challenge</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet" />
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.14/ace.js"></script>
    <style type="text/css">
         body {
        font-family: 'Inter', sans-serif;
      }
      #editor {
        background-color: #2d2d2d; /* Dark background */
        color: #f8f8f2; /* Light font color */
        font-family: monospace; /* Use monospace font */
        border-radius: 8px; /* Rounded corners */
        padding: 10px; /* Padding for better spacing */
        height: 400px; /* Set fixed height */
        overflow-y: auto; /* Scrollable if content overflows */
      }
      .header-container {
        background-color: #e10008;
        color: white;
        padding: 15px;
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        margin-bottom: -15px;
        margin-top: 10px;
      }

      header h1 {
        width: 17cm;
      }

      .container {
        background-color: #fff;
        border-radius: 8px;
        padding: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      }

      .button-container {
        display: flex;
        justify-content: center;
        gap: 20px;
      }

      .custom-button {
        background-color:#e10008;
        color: white;
        padding: 0.5rem 1.5rem;
        font-weight: bold;
        border-radius: 5px;
        transition: all 0.3s;
      }
      .custom-button:hover {
        background-color: #800000;
        transform: translateY(-2px);
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.3);
      }

      .green-button {
        background-color:#06D001;
        color: white;
        padding: 0.5rem 1.5rem;
        font-weight: bold;
        border-radius: 5px;
        transition: all 0.3s;
      }
      .green-button:hover {
        background-color: #059212;
        transform: translateY(-2px);
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.3);
      }

      .blue-button {
        background-color:#006BFF;
        color: white;
        padding: 0.5rem 1.5rem;
        font-weight: bold;
        border-radius: 5px;
        transition: all 0.3s;
      }
      .blue-button:hover {
        background-color: #133E87;
        transform: translateY(-2px);
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.3);
      }

      @media (max-width: 768px) {
        body {
          padding: 10px;
        }
    
        header h1 {
          width: auto;
          font-size: 1.5rem;
        }
    
        .header-container {
          width: 100%;
        }
    
        .button-container {
          flex-direction: row;
          gap: 10px;
          justify-content: center;
        }
    
    
        label {
          margin-left: 0;
        }
    
        .text-center {
          text-align: center;
        }
    
        .text-lg,
        .text-xl {
          font-size: 1rem;
        }
    
        .green-button,
        .custom-button {
          padding: 0.4rem 1rem;
          font-size: 0.875rem;
        }
    
        main {
          display: flex;
          flex-direction: column;
          align-items: center;
        }
      }

    </style>
  </head>
  <body
    class="bg-gray-100 flex flex-col items-center justify-center min-h-screen p-6"
  >
    <header class="header-container text-center">
      <h1 class="text-2xl font-bold">Insertion Sort Challenge</h1>
    </header>

    <main class="mt-8 w-full max-w-2xl">
      <div id="challengeIntro" class="container text-center">
        <p class="text-lg">
          Are you ready to solve the Insertion Sort Challenge?
        </p>
        <div class="button-container mt-4">
          <button
            id="startButton"
            class="green-button text-white font-bold px-6 py-2 rounded shadow"
          >
            Start
          </button>
          <a
            href="/dashboard"
            class="custom-button text-white font-bold px-6 py-2 rounded shadow"
          >
            Cancel
          </a>
        </div>
      </div>
      <div id="challengeSection" class="hidden">
        <div class="text-center mb-6">
          <p class="text-2xl font-bold text-red-600">
            Time Remaining: <span id="timer">1:00:00</span>
          </p>
        </div>
        <div class="container mx-auto px-4 py-8 flex flex-col space-y-6">
          <!-- Visualization Section -->
          <div class="w-full bg-white shadow-md p-6 rounded-lg">
            <h2 class="text-xl font-bold mb-4">Sorting Visualization</h2>
            <div id="visualization" class="flex flex-wrap gap-2"></div>
          </div>

          <!-- Code Editor Section -->
          <div class="w-full bg-white shadow-md p-6 rounded-lg">
            <h2 class="text-xl font-bold mb-4">Fix the Code</h2>
            <p class="text-gray-600 mb-2">
              The code below is supposed to implement an insertion sort
              algorithm, but it has some bugs. Fix the code to make it work.
            </p>
            <div
              id="editor"
              class="border rounded bg-gray-50 min-h-[400px] font-mono"
            ></div>

            <!-- Centered Buttons -->
            <div class="flex justify-center gap-4 mt-4">
              <button
                id="runButton"
                class="green-button text-white font-bold py-2 px-4 rounded"
              >
                Run Code
              </button>
              <button
                id="submitButton"
                class="blue-button text-white font-bold py-2 px-4 rounded"
              >
                Submit
              </button>
            </div>
          </div>
        </div>
      </div>
    </main>

    <script>
      document.addEventListener("DOMContentLoaded", function () {
        const startButton = document.getElementById("startButton");
        const challengeIntro = document.getElementById("challengeIntro");
        const challengeSection = document.getElementById("challengeSection");
        const timerElement = document.getElementById("timer");

        let timer = 3600;

        function formatTime(seconds) {
          const h = Math.floor(seconds / 3600);
          const m = Math.floor((seconds % 3600) / 60);
          const s = seconds % 60;
          return `${h}:${m.toString().padStart(2, "0")}:${s.toString().padStart(2, "0")}`;
        }

        startButton.addEventListener("click", () => {
          challengeIntro.classList.add("hidden");
          challengeSection.classList.remove("hidden");

          const timerInterval = setInterval(() => {
            timer--;
            timerElement.textContent = formatTime(timer);

            if (timer <= 0) {
              clearInterval(timerInterval);
              alert("Time is up!");
              submitButton.disabled = true;
            }
          }, 1000);
        });

        
        startButton.addEventListener("click", function () {
          challengeIntro.classList.add("hidden");
          challengeSection.classList.remove("hidden");
        });

        
        const editor = ace.edit("editor");
        editor.setTheme("ace/theme/twilight");
        editor.session.setMode("ace/mode/javascript");
        editor.setValue(`function insertionSort(arr) {
  // This function is supposed to sort the array in ascending order
  for (let i = 1; i < arr.length; i++) {
    let key = arr[i];
    let j = i - 1;

    // BUG: The condition below is wrong
    while (j >= 0 && arr[j] < key) {
      arr[j + 1] = arr[j];
      j--;
    }

    // BUG: This assignment is misplaced
    arr[i] = key;
  }
  return arr;
}

const result = insertionSort([5, 2, 9, 1, 5, 6]);
console.log(result);
`);
        editor.setFontSize(14);
        editor.setShowPrintMargin(false);
        editor.setOptions({
          useWorker: false,
          highlightActiveLine: true,
        });

        const runButton = document.getElementById("runButton");
        const submitButton = document.getElementById("submitButton");
        const visualization = document.getElementById("visualization");

        const initialArray = [5, 2, 9, 1, 5, 6];

        function renderVisualization(array) {
          visualization.innerHTML = "";
          array.forEach((num) => {
            const bar = document.createElement("div");
            bar.textContent = num;
            bar.style.height = `${num * 10}px`;
            bar.className =
              "w-8 bg-blue-500 text-white text-center rounded shadow-md";
            visualization.appendChild(bar);
          });
        }

        renderVisualization(initialArray);

        runButton.addEventListener("click", function () {
          const userCode = editor.getValue();
          try {
            const userFunction = new Function(
              `${userCode}; return insertionSort;`
            );
            const sortedArray = userFunction()(initialArray.slice());
            renderVisualization(sortedArray);
          } catch (error) {
            alert("Your code has errors: " + error.message);
          }
        });

        submitButton.addEventListener("click", async function () {
          const userCode = editor.getValue();
          try {
            const response = await fetch("/challenges/insertionsort/submit", {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify({ userCode }),
            });

            if (!response.ok) {
              const errorData = await response.json();
              alert(
                "Submission failed: " + (errorData.error || "Unknown error")
              );
              return;
            }

            const data = await response.json();
            if (data.success) {
              alert(data.message);
              
              window.location.href = "/dashboard";
            } else {
              alert("Submission failed: " + data.message);
            }
          } catch (error) {
            alert("An error occurred: " + error.message);
          }
        });
      });
    </script>
  </body>
</html>