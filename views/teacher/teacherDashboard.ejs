<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Teacher | AlgoViz</title>
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet" />
    <style>
       body {
        font-family: 'Inter', sans-serif;
      }
      progress[value] {
        appearance: none;
        -webkit-appearance: none;
        width: 100%;
        height: 10px;
        border-radius: 5px;
        background-color: #a0a1a2;
        overflow: hidden;
      }

      progress[value]::-webkit-progress-bar {
        background-color: #a0a1a2;
        border-radius: 5px;
      }

      progress[value]::-webkit-progress-value {
        background-color: #e10008;
        border-radius: 5px;
      }

      progress[value]::-moz-progress-bar {
        background-color: #5800FF;
        border-radius: 5px;
      }

      #searchInput::placeholder {
        color: #4B5563;
      }

      #searchInput.collapsed {
  padding-left: 2.5rem; 
  text-indent: -9999px; 
  width: 2.5rem; 
  overflow: hidden;
}

#searchIcon.collapsed {
  left: 50%;
  transform: translate(-50%, -50%);
}

.blue-button {
        background-color:#006BFF;
        color: white;
        padding: 0.5rem 1.5rem;
        font-weight: bold;
        border-radius: 5px;
        transition: all 0.3s;
      }
      .blue-button:hover {
        background-color: #133E87;
        transform: translateY(-2px);
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.3);
      }

      .custom-button {
        background-color:#e10008;
        color: white;
        padding: 0.5rem 1.5rem;
        font-weight: bold;
        border-radius: 5px;
        transition: all 0.3s;
      }
      .custom-button:hover {
        background-color: #800000;
        transform: translateY(-2px);
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.3);
      }

    </style>
  </head>
  <body class="flex min-h-screen bg-gray-100">

    <!-- Left Panel -->
    <aside id="sidebar" class="transition-width duration-300 flex-shrink-0 w-64 bg-[#eeeeee] m-5 rounded-2xl shadow-[0_6px_10px_rgba(0,0,0,0.2)]">
      <div class="flex flex-col h-full">
        <!-- Toggle Button Wrapper -->
        <div
          id="toggleWrapper"
          class="flex items-center h-14 border-b border-[#9CA3AF]"
        >
          <button
            id="toggleSidebar"
            class="text-[#9CA3AF] p-2 hover:bg-[#D8D9DA] rounded-lg w-full flex items-center justify-center"
            title="Toggle Sidebar"
          >
            <span id="toggleIcon" class="material-icons text-2xl">menu</span>
          </button>
        </div>


     <!-- User Profile Section -->
     <div id="userProfile" class="flex flex-col items-center p-6 border-b border-gray-300">
      <div class="mb-4 relative">
        <img
          src="<%= profilePicture %>"
          alt="Profile picture"
          class="rounded-full w-20 h-20 drop-shadow-lg"
        />
        <!-- Edit Profile Icon -->
        <span
          onclick="toggleModal(true)"
          class="material-icons absolute bottom-0 right-0 bg-white p-1 rounded-full text-gray-800 cursor-pointer hover:bg-gray-200 transition-all"
          title="Edit Profile"
        >
          edit
        </span>
      </div>

        <div id="userInfo" class="text-center">
            <p class="text-lg font-bold" id="userFullName"><%= fullName %></p>
            <p class="text-sm" id="userEmail"><%= email %></p>
            <br />
            <p class="text-sm" id="userRole"><strong><%= role.toUpperCase() %></strong></p>
            <br />
            <p>CLASS CODE: <br><strong><%= classCode %></strong></p>
          </div>
        </div>

         <!-- Collapsed Profile Picture -->
         <div id="collapsedProfile" class="hidden flex justify-center items-center p-4">
          <img
            src="<%= profilePicture %>"
            alt="Profile picture"
            class="rounded-full w-10 h-10 drop-shadow-lg"
         />
       </div>     

<!-- Search Bar for Students -->
<div class="p-4 relative">
  <input
    type="text"
    id="searchInput"
    class="w-full p-2 pl-10 border rounded-lg text-black text-sm"
    placeholder="Search User by Email..."
  />
  <span
    id="searchIcon"
    class="material-icons absolute left-6 top-1/2 transform -translate-y-1/2 text-gray-500 pointer-events-none"
  >
    search
  </span>
</div>
       <!-- Logout Button -->
       <div class="p-4 border-t border-gray-300 mt-auto">
        <form action="/logout" method="post">
          <button
            class="w-full bg-[#e10008] text-white font-bold px-4 py-2 rounded-lg hover:bg-red-600 transition flex items-center justify-center"
          >
            <span class="material-icons text-white">logout</span>
            <span class="ml-3 text-sidebar text-white">Logout</span>
          </button>
        </form>
      </div>
    </aside>

    <div
      id="profileModal"
      class="fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center hidden z-30"
    >
      <div class="bg-white rounded-lg p-6 shadow-lg w-[90%] max-w-md">
        <h2 class="text-lg font-bold mb-4">Upload Profile Picture</h2>
        <form
          id="profilePictureForm"
          action="/dashboard/update-user-profile-picture"
          method="post"
          enctype="multipart/form-data"
        >
          <input
            id="profilePictureInput"
            type="file"
            name="profilePicture"
            accept=".png, .jpg, .jpeg"
            class="w-full p-2 border rounded-lg text-black text-sm"
            required
          />
          <div class="mt-4 flex justify-between">
            <button
              type="button"
              onclick="toggleModal(false)"
              class="custom-button px-4 py-2 text-white rounded-lg"
            >
              Cancel
            </button>
            <button
              id="submitBtn"
              type="submit"
              class="blue-button px-4 py-2 text-white rounded-lg"
            >
              Submit
            </button>
          </div>
        </form>
      </div>
    </div>

    <!-- Right Panel -->
    <div class="flex-1 p-6">
      <div class="relative overflow-hidden shadow-md rounded-lg">
        <table class="table-fixed w-full text-left">
          <thead
            class="uppercase text-[#e5e7eb]"
            style="background-color: #e10008; color: #e5e7eb"
          >
            <tr>
              <th class="py-2 border text-center font-bold p-4">Name</th>
              <th class="py-2 border text-center font-bold p-4">Email</th>
              <th class="py-2 border text-center font-bold p-4">Progress</th>
              <th class="py-2 border text-center font-bold p-4">Delete</th>
            </tr>
          </thead>
          <tbody class="bg-white bg-[#FFFFFF] text-[#3e4850]" id="userTable">
            <% users.forEach(user => { %>
            <tr class="user-row">
              <td contenteditable="true" class="py-5 border text-center p-4">
                <%= user.fullName %>
              </td>
              <td contenteditable="true" class="py-5 border text-center p-4">
                <%= user.email %>
              </td>
              <td contenteditable="true" class="py-5 border text-center p-4">
                <progress id="file" value="<%= user.progress %>" max="100"></progress><br>
                <p class="text-sm"><strong><%= (isNaN(user.progress) || user.progress == null ? 0 : (user.progress).toFixed(2)) %>% of 100%</strong></p>
              </td>
              <td class="py-5 border text-center p-4">
                <form action="/admin/delete-user/<%= user.id %>" method="POST">
                  <button
                    type="submit"
                    class="text-red-500 hover:text-red-700 transition transform hover:scale-110 active:scale-95"
                  >
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      fill="none"
                      viewBox="0 0 24 24"
                      stroke="currentColor"
                      class="w-6 h-6"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M19 7l-.867 12.142A2 2 0 0116.137 21H7.863a2 2 0 01-1.996-1.858L5 7m5 4v6m4-6v6M1 7h22M8 7V4a2 2 0 012-2h4a2 2 0 012 2v3"
                      />
                    </svg>
                  </button>
                </form>
              </td>
              
            </tr>
            <% }); %>
          </tbody>
        </table>
      </div>
    </div>
  </div>

  <script src="https://cdn.tailwindcss.com"></script>
  <script>
            const sidebar = document.getElementById("sidebar");
const toggleButton = document.getElementById("toggleSidebar");
const toggleWrapper = document.getElementById("toggleWrapper");
const userProfile = document.getElementById("userProfile");
const searchInput = document.getElementById("searchInput");
const searchIcon = document.getElementById("searchIcon");

const navigationLinks = document.querySelectorAll("nav ul li a");

toggleButton.addEventListener("click", () => {
  // Toggle between collapsed and expanded
  sidebar.classList.toggle("w-20");
  sidebar.classList.toggle("w-64");

  // Toggle visibility of text
  const textElements = document.querySelectorAll(".text-sidebar");
  textElements.forEach((text) => {
    text.classList.toggle("hidden");
  });

  // Toggle visibility of user profile and collapsed profile
  if (sidebar.classList.contains("w-20")) {
    userProfile.classList.add("hidden");
    collapsedProfile.classList.remove("hidden");
  } else {
    userProfile.classList.remove("hidden");
    collapsedProfile.classList.add("hidden");
  }

    // Toggle Search Bar Collapse
    if (sidebar.classList.contains("w-20")) {
    searchInput.classList.add("hidden");
    searchIcon.classList.add("collapsed");
  } else {
    searchInput.classList.remove("hidden");
    searchIcon.classList.remove("collapsed");
  }
});
    function toggleModal(show) {
      const modal = document.getElementById("profileModal");
      if (show) {
        modal.classList.remove("hidden");
      } else {
        modal.classList.add("hidden");
      }
    }
  
    document.getElementById('profilePictureInput').addEventListener('change', function(event) {
      const file = event.target.files[0];
      if (file) {
        const reader = new FileReader();
        reader.onloadend = function() {
          const base64Image = reader.result;
  
          const formData = new FormData();
          formData.append('profilePicture', file);
          formData.append('base64ProfilePicture', base64Image);
  
          fetch('/dashboard/update-user-profile-picture', {
            method: 'POST',
            body: formData,
          })
          .then(response => response.json())
          .then(data => {
            console.log(data);
          })
          .catch(error => {
            console.error('Error uploading profile picture:', error);
          });
        };
        reader.readAsDataURL(file);
      }
    });
  
    document.getElementById('profilePictureForm').addEventListener('submit', function(event) {
    event.preventDefault();

    const fileInput = document.getElementById('profilePictureInput');
    const file = fileInput.files[0];

    if (file) {
      const reader = new FileReader();

      reader.onloadend = function() {
        const base64Image = reader.result;

        fetch('/teacher/update-user-profile-picture', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ base64ProfilePicture: base64Image }),
        })
          .then(response => response.json())
          .then((data) => {
            if (data.redirectUrl) {
              window.location.href = data.redirectUrl;
            } else {
              console.log("Profile picture updated successfully");
            }
          })
          .catch(error => {
            console.error('Error:', error);
          });
      };

      reader.readAsDataURL(file);
    } else {
      console.error('No file selected');
    }
  });
  </script>
</body>
</html>